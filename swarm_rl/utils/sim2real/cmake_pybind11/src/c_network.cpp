//#include "network_evaluate.h"
//#include "debug.h"
//#include "param.h"
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>
#include <pybind11/complex.h>
#include <pybind11/functional.h>
#include <pybind11/chrono.h>
#include <pybind11/numpy.h>
#include <pybind11/stl.h>
#include <string.h>

#include <math.h>
#include <random>
#include <vector>
#include <iostream>
#include <algorithm>


namespace py = pybind11;


//std::vector<float> networkEvaluate(control_t_n *control_n, const float *state_array, bool reuse);
//void neighborEmbeddings(const float neighbor_array[NEIGHBORS][NUM_OBS]);

float linear(float num) {
  return num;
}



float sigmoid(float num) {
  return 1 / (1 + exp(-num));
}



float relu(float num) {
  if (num > 0) {
    return num;
  } else {
    return 0;
  }
}

static const int NEIGHBORS = 3;
static const int NUM_OBS = 6;
//static const int structure [6][2] = {{18, 36},{16, 16},{6, 8},{8, 8},{24, 32},{32, 4}};
static const int structure [6][2] = {{18, 16},{16, 16},{6, 8},{8, 8},{24, 32},{32, 4}};
static float output_0[16];
//static float output_1[8];
static float output_2[8];
static float output_3[8];
static float output_4[32];
static float output_5[4];
static float neighbor_embeds[8];
static float embedding_array[24];
static const float actor_encoder_neighbor_encoder_embedding_mlp_0_weight[6][8] = {{0.0498836487531662,0.8252551555633545,1.3562897443771362,0.5575461983680725,-0.33624759316444397,0.37804335355758667,-0.08461552113294601,-0.4574863612651825},{0.7775152325630188,-0.318013459444046,0.20600342750549316,0.155330628156662,0.5885695219039917,-0.0636754259467125,-1.3039971590042114,-1.1767994165420532},{0.2739803194999695,0.46565380692481995,0.802361786365509,0.6268802881240845,-0.5000787377357483,-0.18165220320224762,0.7927850484848022,-1.4393367767333984},{-0.4255605638027191,0.33702126145362854,-0.49491143226623535,0.21287347376346588,0.12070464342832565,0.26526302099227905,0.006660934071987867,-0.14098910987377167},{-0.1953287422657013,0.3340916335582733,-0.29243022203445435,0.06418793648481369,0.2184928059577942,0.4756254255771637,0.28130608797073364,0.4671275317668915},{-0.3081120252609253,-0.33653104305267334,0.17971786856651306,0.4497640132904053,0.4861132800579071,0.20378358662128448,0.4035073518753052,-0.32613199949264526}};
static const float actor_encoder_neighbor_encoder_embedding_mlp_2_weight[8][8] = {{-0.46445924043655396,0.3558708429336548,-0.7136056423187256,0.5999276041984558,-0.13852067291736603,-0.12468653917312622,0.587539553642273,0.6587875485420227},{-0.4095025062561035,-0.7203559875488281,-0.6153052449226379,-0.34826141595840454,0.7268229722976685,-0.597095787525177,-0.15106084942817688,-0.24492347240447998},{-0.007887301966547966,-0.4469745457172394,-0.6687357425689697,0.4830734431743622,0.9834164977073669,0.36892902851104736,0.06123028323054314,-0.6110482215881348},{0.2066400945186615,-0.4898596704006195,-0.4376961290836334,-0.6985076665878296,0.489445298910141,0.01895974390208721,0.6604456901550293,-0.08436817675828934},{-0.039572544395923615,0.301154226064682,0.2207341343164444,-0.301681786775589,-0.1700529307126999,0.06136530265212059,0.588822603225708,0.48106810450553894},{-0.3881950378417969,-0.24833394587039948,-0.27625033259391785,0.18726131319999695,0.5829707384109497,-0.2524099349975586,-0.14727963507175446,0.38695093989372253},{-0.28998827934265137,-0.2563672363758087,0.01487155444920063,-0.32899269461631775,0.2781120240688324,-0.3492738604545593,0.5312683582305908,-0.9174860119819641},{0.48156410455703735,-0.4176349639892578,0.3040255010128021,0.45198026299476624,-1.0774853229522705,0.015385848470032215,0.3548029065132141,0.46058499813079834}};
static const float actor_encoder_self_encoder_0_weight[18][16] = {{-0.507950484752655,-0.07837902009487152,0.24911704659461975,-0.13530413806438446,-0.1362939178943634,0.022555675357580185,0.1264728456735611,-0.1854686439037323,-0.4932611584663391,-0.6403709053993225,-0.15849359333515167,-0.03783547133207321,0.14923250675201416,-0.0803137794137001,0.3318007290363312,-0.020693721249699593},{0.08155518770217896,0.40361112356185913,-0.2598062753677368,-0.25296178460121155,0.014509603381156921,-0.18214721977710724,-0.07028699666261673,-0.38172823190689087,-0.1914232075214386,0.30705687403678894,0.09004199504852295,0.1333039104938507,-0.006795176304876804,0.36588555574417114,-0.2200862169265747,-0.03188410773873329},{0.46160688996315,-0.2496851235628128,-0.05309314280748367,0.34699419140815735,-0.12075567990541458,0.4709828495979309,0.31539303064346313,0.33261173963546753,-0.41843628883361816,-0.4307936131954193,-0.06618610769510269,0.17351573705673218,-0.2757158577442169,-0.1427117884159088,-0.587323009967804,0.07633477449417114},{-0.033124420791864395,-0.016479749232530594,-0.11482230573892593,-0.1304231882095337,-0.05649927258491516,-0.09491818398237228,0.02688908763229847,-0.2725996673107147,-0.043414101004600525,-0.3306015133857727,-0.14288248121738434,-0.38113945722579956,-0.25496169924736023,-0.12358463555574417,0.37530142068862915,0.158030703663826},{-0.05658330023288727,-0.2855708599090576,-0.39119836688041687,-0.13371138274669647,0.06145448237657547,-0.012880627997219563,0.24916324019432068,-0.45849406719207764,0.009410628117620945,-0.187255859375,0.21617887914180756,-0.21775510907173157,0.49227625131607056,-0.04340166598558426,-0.36561426520347595,-0.17816030979156494},{0.20784717798233032,-0.5004147887229919,-0.25643786787986755,0.044792428612709045,0.014304733835160732,0.3706595003604889,-0.05143067613244057,-0.06490837782621384,-0.2122584879398346,-0.3545060157775879,-0.007202307693660259,-0.10298700630664825,-0.2234717309474945,0.02421596273779869,0.2176034301519394,-0.2298782914876938},{-0.11337452381849289,-0.03196735307574272,-0.15182499587535858,0.5524467825889587,-0.0692576989531517,-0.17741793394088745,-0.06701662391424179,-0.11363464593887329,-0.04630572721362114,0.08539409190416336,0.16631147265434265,0.14662224054336548,-0.11734922975301743,-0.4696594476699829,0.11180875450372696,0.21082532405853271},{-0.3398689329624176,-0.05272556468844414,-0.2291894108057022,0.25093621015548706,-0.08133042603731155,-0.3761589825153351,0.15214332938194275,0.20380403101444244,0.013997562229633331,0.07890501618385315,0.01866426132619381,-0.0903397649526596,-0.2613368332386017,-0.33923396468162537,-0.4707672894001007,-0.20703613758087158},{-0.3597864806652069,0.21511009335517883,-0.1104607880115509,-0.3142697513103485,-0.69710373878479,0.08330516517162323,0.045580971986055374,-0.20165979862213135,-0.20465749502182007,0.1785651594400406,-0.8361054062843323,0.004725937265902758,0.09310553967952728,0.2619737386703491,0.332000732421875,-0.5816200375556946},{0.24085746705532074,-0.2379077523946762,-0.11102836579084396,-0.07520432770252228,-0.13552767038345337,-0.2030830979347229,-0.19691738486289978,-0.3193032443523407,-0.3016621172428131,-0.19267915189266205,-0.38028836250305176,0.13588343560695648,-0.06832997500896454,0.1698797643184662,-0.0037284463178366423,-0.46768221259117126},{0.3125263750553131,-0.003666879842057824,-0.03513437137007713,0.4039503037929535,-0.7339779138565063,-0.11730038374662399,-0.5831636190414429,-0.18571710586547852,-0.23325930535793304,0.02069663628935814,-0.1342664659023285,-0.12431307137012482,0.14134326577186584,0.16808739304542542,-0.10482834279537201,-0.02934996224939823},{-0.06688223779201508,-0.2416975200176239,-0.31365159153938293,0.08932547271251678,-0.10307030379772186,0.11640044301748276,0.8081316351890564,-0.6531690359115601,-0.11985240131616592,-0.16780133545398712,0.37660902738571167,-0.5012305974960327,0.29495447874069214,0.8861175179481506,-0.5030924081802368,-0.42393508553504944},{-0.08814910799264908,0.5075652003288269,0.049828775227069855,0.3931463360786438,0.5962283611297607,-0.32538366317749023,-0.0789835974574089,0.39092591404914856,-0.21391525864601135,-0.16792970895767212,-0.15457238256931305,0.07005887478590012,0.07478953897953033,-0.7167885899543762,-0.30017897486686707,0.39672017097473145},{-0.2434953898191452,-0.1470755934715271,0.15530182421207428,0.0910586342215538,-0.14761394262313843,0.24570909142494202,0.10923086851835251,-0.5506203770637512,0.38543784618377686,-0.08931714296340942,-0.9101100564002991,-0.2520705759525299,-0.055352792143821716,-0.4647493362426758,0.03826107829809189,0.021299973130226135},{0.01708451844751835,0.18376433849334717,-0.2838380038738251,0.5020570158958435,0.500275194644928,-0.09201695024967194,-0.21407228708267212,-0.027615703642368317,0.22727276384830475,0.16662552952766418,-0.028583316132426262,0.33760160207748413,0.057080838829278946,-0.34030061960220337,-0.22674131393432617,0.05061523988842964},{0.2283831238746643,0.14902730286121368,-0.19205963611602783,-0.14829488098621368,-0.08621631562709808,-0.12356121093034744,0.07479541748762131,-0.11169088631868362,0.20957821607589722,-0.25380581617355347,-0.2616935670375824,0.08058580756187439,-0.04830753430724144,-0.22145380079746246,0.181357279419899,0.23357778787612915},{-0.2100609838962555,0.17594926059246063,-0.29366549849510193,-0.06765604764223099,-0.01370040699839592,0.3438066244125366,0.153115913271904,-0.3184899687767029,-0.172651007771492,-0.03329271823167801,0.07323519140481949,-0.49182605743408203,0.014794937334954739,0.1086726188659668,-0.22895066440105438,0.06500396877527237},{0.027794981375336647,-0.11952641606330872,0.20989900827407837,-0.3117959797382355,0.19104796648025513,0.13145241141319275,0.2922254502773285,-0.2699892520904541,0.07045567035675049,0.058633554726839066,0.002797622000798583,-0.3728409707546234,-0.4832710921764374,-0.16322079300880432,0.038793668150901794,-0.32990747690200806}};
static const float actor_encoder_self_encoder_2_weight[16][16] = {{0.01316213421523571,-0.19517531991004944,-0.13196805119514465,-0.15819823741912842,0.14392851293087006,0.025364549830555916,-0.17526036500930786,0.39222845435142517,0.05341200903058052,0.2501278817653656,-0.3225703835487366,-0.2749478816986084,0.12591905891895294,-0.4769132137298584,0.2479790598154068,0.105730339884758},{-0.07046985626220703,-0.21569125354290009,-0.24341247975826263,0.37621188163757324,-0.1767290085554123,-0.07000117003917694,0.06949634104967117,0.22415350377559662,0.299394428730011,-0.2769724130630493,-0.2148420512676239,0.030765824019908905,-0.24386602640151978,0.18125541508197784,-0.2779374122619629,-0.06252455711364746},{-0.2357054203748703,-0.1883709728717804,0.21105723083019257,0.36167699098587036,-0.04931534826755524,-0.22222353518009186,0.32870224118232727,-0.23685242235660553,-0.009400023147463799,0.058032866567373276,0.024670515209436417,-0.3098530173301697,-0.2764354646205902,-0.43461495637893677,-0.26047593355178833,0.01467793621122837},{0.2030920386314392,-0.34662532806396484,0.28905218839645386,-0.2864314615726471,0.3619353771209717,0.06509777903556824,-0.35216549038887024,-0.22008155286312103,-0.02921692281961441,0.30274727940559387,-0.4649035334587097,0.19545726478099823,-0.35885030031204224,-0.04539932683110237,0.36934149265289307,0.254999041557312},{-0.1226055696606636,-0.03236839175224304,-0.49568307399749756,0.033678263425827026,0.15289291739463806,-0.19127382338047028,0.6197196245193481,-0.5277161598205566,0.11787474155426025,0.013620209880173206,-0.37508028745651245,0.3895808160305023,0.3745308816432953,0.3229929804801941,0.13446593284606934,0.49114933609962463},{-0.08116060495376587,0.18225495517253876,0.09459839016199112,-0.5110276341438293,0.4072570502758026,-0.2992299497127533,0.02039778232574463,-0.06491795927286148,0.026663759723305702,0.22187356650829315,0.23239997029304504,0.24864119291305542,-0.24385181069374084,-0.3153829872608185,-0.21522793173789978,0.28418755531311035},{0.14697811007499695,0.06677484512329102,-0.2686825394630432,0.22128012776374817,-0.14104659855365753,0.4630807638168335,0.38399073481559753,0.2526751458644867,0.2582346200942993,-0.04207334294915199,0.13020536303520203,-0.24475178122520447,0.3250432014465332,0.22610370814800262,-0.15182971954345703,-0.12351438403129578},{-0.2688283324241638,0.266046941280365,-0.02814154140651226,-0.2881462872028351,0.25158825516700745,0.028139406815171242,0.22787658870220184,0.18357649445533752,-0.22375456988811493,0.0355425626039505,-0.41100558638572693,0.2952890694141388,0.08841126412153244,-0.1616310179233551,-0.3910399079322815,0.2827168405056},{0.3182220458984375,-0.0544573999941349,0.3146786093711853,0.3557246923446655,-0.23385274410247803,-0.36947187781333923,-0.3811102509498596,-0.1260206401348114,-0.13069556653499603,0.1998954713344574,-0.08968592435121536,0.3789437413215637,0.2866010367870331,-0.22926835715770721,-0.28638747334480286,-0.05286268889904022},{0.2265862077474594,-0.1480434089899063,-0.03670003265142441,0.22771064937114716,-0.006831256672739983,-0.46639010310173035,0.16463424265384674,0.2926088273525238,0.20410530269145966,0.12116805464029312,-0.008649513125419617,-0.07967737317085266,0.06380587816238403,-0.3056177794933319,0.11446404457092285,0.3596716523170471},{0.529278576374054,-0.203543022274971,-0.49093547463417053,0.22127310931682587,-0.040150076150894165,-0.35668936371803284,0.26722440123558044,0.4232740104198456,-0.3116106390953064,0.2182047963142395,-0.15723448991775513,-0.06341052055358887,-0.11903022974729538,0.26506882905960083,0.4704711139202118,0.23217572271823883},{-0.01885768212378025,-0.16514375805854797,0.23769234120845795,-0.20011292397975922,0.2951229512691498,0.16722652316093445,-0.1854851394891739,-0.09296747297048569,0.1575489342212677,0.22155654430389404,-0.2798956632614136,0.12552888691425323,-0.18649400770664215,-0.2628709077835083,0.22018499672412872,0.2599491775035858},{0.132679283618927,-0.07749510556459427,-0.050135593861341476,0.19676008820533752,0.15344125032424927,-0.24289631843566895,0.27188506722450256,0.019686130806803703,-0.3569878935813904,-0.33159157633781433,0.24513116478919983,0.16767674684524536,-0.2430383414030075,0.3164359927177429,0.29659056663513184,-0.08227384090423584},{0.12976256012916565,-0.08701135218143463,-0.43347907066345215,0.20983560383319855,0.2391453981399536,-0.26085901260375977,-0.2741180658340454,0.126359224319458,0.15184228122234344,-0.12804757058620453,-0.03318111225962639,-0.5519452691078186,0.3827972412109375,0.19260422885417938,0.14692211151123047,-0.28712400794029236},{-0.4020732045173645,-0.2834058403968811,-0.022539835423231125,0.00147989799734205,0.07929288595914841,-0.2222868949174881,-0.16326569020748138,-0.0007260620477609336,0.24073772132396698,0.024168772622942924,0.3304002285003662,0.4670528471469879,-0.0603770837187767,0.09225080162286758,0.04194832593202591,0.06750982254743576},{0.06616576761007309,-0.15735594928264618,0.37604960799217224,0.1277497410774231,0.20880480110645294,0.2894469201564789,0.23844408988952637,-0.014778059907257557,-0.0640779361128807,0.24177634716033936,-0.31719428300857544,-0.027889203280210495,-0.15003417432308197,-0.16655579209327698,0.1013263463973999,0.11463950574398041}};
static const float actor_encoder_feed_forward_0_weight[24][32] = {{0.152669757604599,0.39117002487182617,-0.24836741387844086,0.20193392038345337,0.024035628885030746,0.1621384471654892,0.2652066946029663,-0.2616499364376068,0.014098137617111206,-0.08268868923187256,0.2816978394985199,-0.2369259148836136,-0.08518330752849579,0.3870668411254883,-0.08311983942985535,0.29974961280822754,0.23313884437084198,0.127107635140419,0.26980990171432495,0.21208058297634125,-0.20667219161987305,-0.22572246193885803,0.046298835426568985,0.24777869880199432,0.12999224662780762,0.27375638484954834,-0.2881523668766022,-0.39980146288871765,-0.1015232652425766,0.2258617877960205,-0.12805891036987305,0.18103529512882233},{0.14471609890460968,0.03241869807243347,0.15050946176052094,-0.20513442158699036,0.03875194862484932,-0.2873152494430542,0.10644517838954926,0.21083422005176544,-0.2420814037322998,-0.1566389501094818,0.04599517583847046,-0.003649363061413169,0.08311360329389572,-0.05754491314291954,-0.17377005517482758,0.2159484624862671,0.06428910791873932,-0.19951607286930084,0.11279396712779999,-0.012160386890172958,0.09496279805898666,-0.21194839477539062,0.33825498819351196,-0.18768014013767242,0.10586651414632797,0.2906114459037781,0.1916898936033249,0.33048030734062195,-0.06850716471672058,0.20714455842971802,0.07955801486968994,0.07909993082284927},{0.13323082029819489,-0.019747238606214523,0.26949962973594666,-0.22904428839683533,0.18274158239364624,-0.3518664240837097,-0.13694949448108673,-0.26283717155456543,0.1507042497396469,0.2762887179851532,0.09985353797674179,0.08321994543075562,0.08309367299079895,-0.002325531095266342,-0.056645311415195465,0.21220511198043823,-0.2484557181596756,-0.15458035469055176,0.1033809706568718,0.010642475448548794,-0.3772103786468506,0.32001933455467224,-0.09743180125951767,-0.23055754601955414,0.05537983030080795,-0.1881258338689804,-0.03915055841207504,-0.06814789026975632,-0.24796652793884277,-0.13475944101810455,0.293855220079422,0.23925869166851044},{0.2324949949979782,0.07625500857830048,-0.202677384018898,-0.3465571105480194,-0.23095703125,-0.2945461869239807,0.15943320095539093,0.18669603765010834,-0.045227061957120895,0.1508617401123047,-0.2933622896671295,-0.11429408192634583,-0.13945212960243225,-0.14436651766300201,-0.13524438440799713,-0.07783788442611694,-0.3464570939540863,-0.2310335636138916,0.11986719071865082,0.09045669436454773,-0.006420161575078964,0.3013327419757843,-0.22807958722114563,-0.08742067962884903,0.25479423999786377,0.12279810756444931,0.371820330619812,-0.321785569190979,-0.02921404503285885,-0.3766224980354309,-0.3769580125808716,0.12599456310272217},{-0.091250941157341,-0.0933319479227066,-0.26205840706825256,0.040417127311229706,0.260423481464386,-0.0656067430973053,0.15853317081928253,0.2550559937953949,0.10040515661239624,0.3761400580406189,-0.14803053438663483,-0.2342585027217865,0.01778711937367916,0.14078935980796814,0.07044301927089691,0.08985307812690735,-0.24592331051826477,-0.38436591625213623,-0.29299238324165344,0.34397655725479126,-0.03988500311970711,-0.3908591568470001,-0.2677009105682373,-0.21836243569850922,-0.03470761701464653,0.36556482315063477,0.18576504290103912,0.27361226081848145,-0.19467581808567047,-0.022061379626393318,0.16148336231708527,-0.2440638244152069},{0.389870822429657,-0.21730875968933105,-0.24523921310901642,-0.1882115602493286,0.11378717422485352,-0.033001724630594254,-0.11607225984334946,0.007737526670098305,0.1536916345357895,0.34980159997940063,-0.23769555985927582,0.1712617129087448,0.2883162796497345,-0.2917150557041168,0.21501782536506653,-0.19120897352695465,-0.09393496066331863,0.21992728114128113,-0.023250194266438484,0.3416287302970886,0.21008828282356262,-0.0445413812994957,-0.2302536964416504,0.005557108670473099,-0.29828956723213196,0.024796804413199425,0.003302057972177863,0.2107415795326233,-0.015325130894780159,0.17032580077648163,0.15942440927028656,-0.1452171355485916},{0.1845984160900116,-0.0986933782696724,0.19403012096881866,-0.10659085959196091,-0.2887409031391144,-0.1621009260416031,0.2648792862892151,-0.20631861686706543,0.1709694266319275,0.14470632374286652,-0.18785178661346436,0.09310226142406464,0.00228296360000968,0.12234055995941162,-0.06396060436964035,0.022154539823532104,0.04847120866179466,-0.07549099624156952,-0.0511966310441494,-0.2767128348350525,0.07073430716991425,-0.24691836535930634,-0.1591569036245346,-0.27236464619636536,0.06696797907352448,-0.28391772508621216,0.1121944710612297,-0.007167045492678881,0.26136383414268494,0.09220099449157715,-0.051392871886491776,0.052138056606054306},{0.3014574944972992,-0.1786605566740036,-0.21987351775169373,0.21753041446208954,-0.06569696962833405,0.10375315696001053,0.16522857546806335,-0.297524631023407,-0.13999652862548828,-0.21891389787197113,-0.2508188486099243,-0.3362838327884674,-0.2487456202507019,-0.23528644442558289,0.10707651823759079,0.27280136942863464,0.36140114068984985,-0.2687831223011017,0.0354606993496418,-0.00035221624420955777,-0.11691294610500336,-0.15302158892154694,-0.18356458842754364,0.2238519787788391,-0.157903254032135,0.04974324256181717,-0.22693809866905212,-0.0012050766963511705,-0.25021180510520935,-0.04655645042657852,-0.1963275820016861,-0.15822358429431915},{0.2552422285079956,0.11791538447141647,-0.11159591376781464,-0.07311174273490906,0.189652219414711,0.13461415469646454,0.1469402313232422,0.07870350778102875,0.15634973347187042,-0.23001866042613983,0.2605416178703308,0.05295306444168091,0.14497220516204834,-0.15413135290145874,0.20697008073329926,0.15096843242645264,-0.02702571079134941,0.10913912206888199,-0.20015785098075867,-0.23643533885478973,0.06114993244409561,0.2522526681423187,-0.09256836026906967,-0.29207533597946167,-0.16599123179912567,-0.03549341484904289,0.2465762197971344,0.0058658127672970295,0.14005932211875916,-0.27216944098472595,-0.012426597997546196,-0.08171796798706055},{-0.276160329580307,0.041704773902893066,0.19706779718399048,-0.1558133065700531,-0.003484201617538929,0.3637465536594391,0.25018036365509033,-0.20370067656040192,-0.23038402199745178,0.08481831103563309,0.1429925411939621,0.10207787156105042,-0.14799864590168,0.21929217875003815,-0.22979721426963806,-0.3251202404499054,0.11956428736448288,-0.20122382044792175,-0.027534930035471916,0.14102803170681,0.3225092887878418,0.046434976160526276,0.20230433344841003,-0.14242632687091827,0.11957869678735733,0.19818438589572906,0.15239547193050385,0.28619202971458435,-0.11634569615125656,-0.027315586805343628,0.13307467103004456,0.29911622405052185},{0.13821984827518463,-0.18116095662117004,-0.14811480045318604,0.004726875107735395,-0.08478996157646179,0.2025657743215561,-0.28747665882110596,0.07230941951274872,-0.2792423367500305,-0.38009724020957947,0.2247241735458374,0.02147090993821621,0.004646825138479471,-0.2605198919773102,-0.06875447183847427,-0.12146022915840149,0.1211056336760521,0.12340864539146423,-0.07251156866550446,0.1395060420036316,0.03488946333527565,0.05199538916349411,0.10552434623241425,0.1979733109474182,0.11425508558750153,-0.36181798577308655,0.005830459762364626,0.18226398527622223,-0.1472408026456833,-0.20715780556201935,0.16554930806159973,0.13545268774032593},{0.1886872500181198,0.2906578779220581,0.22478777170181274,-0.033242132514715195,-0.26584380865097046,0.12278427183628082,-0.08322387933731079,0.04871952906250954,0.06923183798789978,0.18986520171165466,-0.19611366093158722,0.131941556930542,0.13650590181350708,0.21131902933120728,-0.1688101440668106,-0.3190244436264038,-0.3368431031703949,0.21643301844596863,0.27735188603401184,-0.24065035581588745,-0.24375322461128235,0.19386044144630432,0.23534999787807465,-0.3123732805252075,0.09488894045352936,0.11158721894025803,0.18257255852222443,0.18808379769325256,0.0476485975086689,0.12744340300559998,-0.09279307723045349,0.2095472365617752},{-0.22437845170497894,0.18889988958835602,-0.03623666986823082,-0.06495777517557144,-0.3673853874206543,0.015453961677849293,0.19597268104553223,0.01879950612783432,-0.29711398482322693,0.052619725465774536,0.2751448452472687,-0.05156349763274193,0.10227671265602112,-0.15463091433048248,-0.18658319115638733,0.21655216813087463,-0.2868744134902954,0.09070990234613419,-0.3495924174785614,-0.26072046160697937,0.08840789645910263,-0.009794059209525585,0.41016510128974915,0.18137270212173462,-0.10050517320632935,-0.15046058595180511,0.04313496872782707,0.12218313664197922,0.2538113296031952,-0.20979921519756317,-0.04878929629921913,0.07659798860549927},{-0.06142379343509674,0.19828006625175476,0.057457029819488525,0.15530569851398468,0.2787332832813263,-0.018532324582338333,0.06490682065486908,0.23751762509346008,-0.23457689583301544,0.07421737909317017,-0.008973023854196072,0.1089298352599144,-0.15907329320907593,0.3175579607486725,0.028140580281615257,-0.036394257098436356,0.14347341656684875,0.1503400057554245,0.021627046167850494,0.19208316504955292,-0.24062447249889374,0.167457714676857,-0.10561420023441315,0.1922333985567093,0.0876024067401886,0.01605992205440998,0.2600885033607483,-0.15538345277309418,0.2514481544494629,0.16787797212600708,-0.166445791721344,-0.1947413980960846},{-0.24849840998649597,0.24250540137290955,0.01692044362425804,0.09042733162641525,-0.2011243999004364,0.217463418841362,-0.05176262930035591,-0.02910596691071987,0.12170872092247009,-0.3033072054386139,-0.08396992087364197,-0.22266089916229248,-0.15792857110500336,0.0941091924905777,-0.03317033499479294,-0.25311094522476196,0.1342417448759079,0.05266532674431801,0.2542051374912262,0.21358034014701843,-0.19996954500675201,-0.26498857140541077,-0.15331505239009857,0.2577625811100006,0.2720160484313965,0.22260737419128418,0.15780191123485565,0.10599956661462784,-0.01680098846554756,0.0439932718873024,-0.30633091926574707,0.16143810749053955},{-0.11661472916603088,0.06423414498567581,-0.040552858263254166,-0.10537491738796234,0.16852639615535736,0.2960189878940582,0.25836125016212463,-0.22270731627941132,0.19767042994499207,0.3390902578830719,0.07282909750938416,-0.0866428092122078,-0.10655927658081055,-0.12242240458726883,-0.34302425384521484,-0.1461966186761856,-0.12124644964933395,-0.26284053921699524,-0.3879413902759552,-0.2031611055135727,-0.050382670015096664,-0.027573728933930397,0.09021999686956406,0.12715891003608704,-0.058341000229120255,0.04182863235473633,0.16417565941810608,-0.2410624623298645,-0.05291111022233963,0.059580396860837936,0.1501672863960266,0.053319912403821945},{0.11405026912689209,-0.0016231746412813663,0.2733347713947296,0.3674926161766052,-0.014252925291657448,-0.11169924587011337,0.093121737241745,-0.21764276921749115,-0.14412377774715424,-0.020033620297908783,0.19760346412658691,0.22999978065490723,0.03377135097980499,0.11746588349342346,0.1253281682729721,0.055037304759025574,0.04260924831032753,0.1181076318025589,-0.013743443414568901,0.2454073429107666,-0.19755861163139343,-0.2044527530670166,-0.2274731695652008,-0.10960958898067474,0.18029990792274475,-0.25117480754852295,-0.3018166720867157,0.2498396635055542,-0.1359134316444397,-0.3263457417488098,-0.2712525725364685,0.1318846046924591},{0.2455275058746338,0.20872372388839722,0.26666611433029175,0.26930251717567444,0.14058996737003326,0.3057350814342499,-0.3575667440891266,-0.009430689737200737,-0.06865917146205902,-0.009260343387722969,-0.19599637389183044,-0.22806736826896667,-0.02189888432621956,-0.30473870038986206,0.3186887800693512,-0.021730277687311172,-0.1943701207637787,0.21620279550552368,0.04216715320944786,0.06680217385292053,0.3159380555152893,-0.24510571360588074,0.21571816504001617,0.15739834308624268,-0.4032551348209381,-0.12664026021957397,0.18301011621952057,-0.19743679463863373,-0.033914364874362946,0.44944173097610474,-0.17792263627052307,-0.05955937132239342},{-0.07360224425792694,-0.1732475608587265,-0.15572510659694672,-0.07584600895643234,-0.2451942414045334,-0.226537823677063,0.1557992845773697,-0.3007023334503174,-0.30708131194114685,0.24002815783023834,0.2188025414943695,0.20709653198719025,-0.20993570983409882,-0.2486065775156021,0.1440344750881195,0.21122659742832184,-0.0082695372402668,-0.08324781805276871,0.04107837751507759,-0.2150503545999527,0.03971187770366669,-0.11426253616809845,0.0026793568395078182,-0.09203346818685532,0.16321945190429688,-0.037631142884492874,0.06548982858657837,-0.23044410347938538,-0.2502380907535553,-0.03441397100687027,0.03757096827030182,0.18462041020393372},{-0.281858891248703,-0.1666232943534851,0.28701940178871155,0.13705113530158997,-0.02542804554104805,0.208293616771698,-0.04386972263455391,0.011383714154362679,0.06955862790346146,0.020779725164175034,-0.08196409791707993,0.3755834102630615,0.34718096256256104,-0.3473001718521118,-0.13271336257457733,-0.1246364563703537,0.08113572001457214,0.19274666905403137,0.05781975015997887,0.009419485926628113,0.18919314444065094,0.10435441136360168,-0.2184407263994217,-0.15706247091293335,0.15808850526809692,0.04676235094666481,0.11459828168153763,-0.25068530440330505,-0.24042382836341858,0.15734273195266724,0.367120623588562,-0.17658421397209167},{0.2548586428165436,-0.009319630451500416,0.19216065108776093,0.1375107318162918,0.28321611881256104,0.205727219581604,-0.20858007669448853,-0.11319715529680252,0.01896963082253933,-0.11469269543886185,0.0807274654507637,-0.2508693039417267,0.23051053285598755,-0.0012443573214113712,0.35267001390457153,0.07745186239480972,0.04087141156196594,0.10855846107006073,0.07558594644069672,0.10613175481557846,-0.012082286179065704,-0.3450230062007904,-0.21655137836933136,-0.014218795113265514,0.10364819318056107,0.11928393691778183,0.011867338791489601,0.25385013222694397,-0.10185278207063675,-0.12102624773979187,0.3546658456325531,0.3287627398967743},{0.2037794440984726,-0.05677983909845352,-0.01291017234325409,-0.22269655764102936,-0.268921822309494,-0.1957280933856964,-0.008726167492568493,0.1320139616727829,-0.06538980454206467,0.1373445689678192,-0.35658445954322815,-0.14519467949867249,0.08300893753767014,0.07040505111217499,-0.26571300625801086,-0.18025410175323486,-0.02442161552608013,0.029803283512592316,-0.27712029218673706,0.22746418416500092,-0.07362747937440872,0.003084606723859906,-0.19786140322685242,0.007939072325825691,0.09607496112585068,-0.008007515221834183,0.12076752632856369,0.09260302037000656,-0.022273799404501915,-0.2646619975566864,-0.2419533133506775,0.3541198670864105},{-0.1414392739534378,0.21275678277015686,-0.28238633275032043,-0.1606856733560562,0.0175126064568758,-0.2273598164319992,-0.01954597234725952,-0.22816595435142517,0.23072566092014313,-0.22055384516716003,-0.07799025624990463,0.37363478541374207,-0.08609986305236816,-0.17088432610034943,-0.32624703645706177,0.005572832655161619,0.08428992331027985,-0.03292938321828842,0.23420755565166473,-0.1967466175556183,-0.035214897245168686,-0.03773557022213936,0.037119098007678986,0.09142514318227768,-0.10502937436103821,-0.0634552389383316,0.32260286808013916,-0.04689423367381096,-0.2874874174594879,-0.323613703250885,0.34997132420539856,0.020931635051965714},{0.21326246857643127,0.1843365579843521,-0.021903634071350098,-0.35131800174713135,-0.36295533180236816,0.18797481060028076,-0.21142740547657013,0.060566265136003494,-0.09884005039930344,0.15124157071113586,-0.053231049329042435,-0.09469441324472427,-0.011439302936196327,0.3087974786758423,0.1258905529975891,0.14623217284679413,-0.13555659353733063,-0.33056995272636414,0.14933045208454132,-0.29412978887557983,-0.14012949168682098,-0.053761739283800125,0.13210541009902954,0.23967739939689636,0.11105740815401077,0.04570719972252846,0.1080496534705162,-0.08844880014657974,-0.17475448548793793,-0.2835002839565277,0.198377326130867,0.1560164988040924}};
static const float action_parameterization_distribution_linear_weight[32][4] = {{0.13979582488536835,-0.26916417479515076,-0.28751054406166077,-0.22037848830223083},{-0.12652389705181122,-0.016240350902080536,0.2798675298690796,0.033531107008457184},{0.006022478919476271,-0.009774798527359962,-0.06781253218650818,-0.23166371881961823},{-0.05610447749495506,0.020265230908989906,-0.022319607436656952,-0.06663549691438675},{-0.07039566338062286,-0.05442363768815994,-0.3157309591770172,-0.16158424317836761},{-0.19585005939006805,-0.33136001229286194,0.03179556503891945,-0.11401444673538208},{-0.014355986379086971,-0.14717940986156464,0.38511180877685547,-0.23837275803089142},{0.30710625648498535,0.04433941841125488,0.04773516207933426,0.36249399185180664},{0.04354366660118103,0.19016225636005402,0.029258504509925842,0.1964952051639557},{-0.2012685090303421,-0.17741179466247559,-0.22719988226890564,-0.08190418779850006},{0.24272842705249786,-0.24255648255348206,-0.1357566863298416,0.16147637367248535},{-0.0724181979894638,0.21048659086227417,0.1336662769317627,-0.20348283648490906},{0.3223378658294678,-0.10770774632692337,-0.32890570163726807,-0.33734190464019775},{-0.09968765079975128,-0.08344680815935135,0.04140467941761017,0.20694079995155334},{0.3399915099143982,-0.3137354850769043,-0.49071255326271057,-0.16544264554977417},{0.1742458939552307,-0.11407354474067688,0.005530995316803455,0.189201220870018},{-0.050262611359357834,-0.32016661763191223,-0.39299842715263367,-0.06335499882698059},{0.1794915646314621,0.06818236410617828,0.02437281422317028,-0.29376640915870667},{0.23392611742019653,0.4167174994945526,0.022860104218125343,0.36296164989471436},{-0.21464486420154572,0.0923113152384758,-0.3294300436973572,0.1146295964717865},{0.09436161071062088,-0.30555471777915955,-0.1529291570186615,-0.029428677633404732},{0.27987048029899597,0.38046568632125854,-0.043948348611593246,-0.011750217527151108},{-0.048585906624794006,-0.2965766191482544,0.08804680407047272,-0.2310556322336197},{0.1734795868396759,-0.16963689029216766,-0.05347278341650963,0.16623345017433167},{0.2180657982826233,0.24294087290763855,0.13445036113262177,0.01239618007093668},{-0.31452760100364685,0.11155542731285095,-0.0791325569152832,-0.08288439363241196},{0.17823365330696106,0.1726772040128708,0.11485672742128372,0.16600415110588074},{-0.2909799814224243,-0.06764394789934158,-0.33237338066101074,-0.4031983017921448},{0.25969940423965454,-0.3516831398010254,0.31567883491516113,-0.17147840559482574},{-0.2176724672317505,-0.3675271272659302,-0.2809135913848877,-0.030633648857474327},{-0.17132025957107544,0.06681375205516815,0.15649865567684174,-0.3416510820388794},{0.047353193163871765,-0.23688027262687683,-0.09445510059595108,-0.2930869460105896}};
static const float actor_encoder_neighbor_encoder_embedding_mlp_0_bias[8] = {-0.03215358778834343,0.0016850082902237773,0.003857425646856427,0.020399844273924828,0.012200971134006977,-0.01639660820364952,-0.0405760295689106,-0.006544496864080429};
static const float actor_encoder_neighbor_encoder_embedding_mlp_2_bias[8] = {-0.02029230073094368,0.02957315929234028,0.02693445235490799,0.032474812120199203,-0.058231648057699203,0.0651947483420372,0.01761137694120407,0.014060317538678646};
static const float actor_encoder_self_encoder_0_bias[16] = {0.005192951764911413,-0.04924166947603226,-0.11676815897226334,0.03043821081519127,-0.027650607749819756,-0.06920861452817917,0.07495955377817154,-0.05945134535431862,-0.07948019355535507,-0.012289955280721188,-0.09959114342927933,-0.05435846745967865,-0.07339420169591904,0.017465969547629356,-0.02683657966554165,-0.11797738820314407};
static const float actor_encoder_self_encoder_2_bias[16] = {-0.0022466813679784536,0.06923142075538635,-0.023931166157126427,0.14840658009052277,0.07961095124483109,0.04377143085002899,-0.12377187609672546,0.02649434469640255,-0.0019239492248743773,-0.048795316368341446,0.055985648185014725,-0.01022963598370552,0.049914661794900894,-0.015576966106891632,0.07679509371519089,-0.019424885511398315};
static const float actor_encoder_feed_forward_0_bias[32] = {0.006060160230845213,-0.054643601179122925,-0.005478264763951302,-0.021991265937685966,-0.005022833589464426,-0.045761656016111374,-0.03796324133872986,0.03563584014773369,0.008179659955203533,0.015247358940541744,0.02303515560925007,-0.010922808200120926,0.014175789430737495,0.013168171048164368,-0.0019513106672093272,0.039778172969818115,-0.012396757490932941,0.0032947396393865347,-0.00922230165451765,0.011542638763785362,0.019734060391783714,-0.013597504235804081,-0.006004834547638893,0.04054674506187439,-0.01721222884953022,-0.033583734184503555,0.013888737186789513,-0.027983037754893303,0.017418434843420982,0.032746266573667526,-0.013813943602144718,0.0029301203321665525};
static const float action_parameterization_distribution_linear_bias[4] = {0.014275819063186646,-0.004552863072603941,-0.011407431215047836,0.019291620701551437};


void neighborEmbedsImpl(const std::vector<std::vector<float>> &neighbors_array) {
  py::print("This prints! in NE!");
  //reset embeddings accumulator to zero
  memset(neighbor_embeds, 0, sizeof(neighbor_embeds));

  // get the neighbor embeddings
  for (int n = 0; n < NEIGHBORS; n++) {
    for (int i = 0; i < structure[2][1]; i++) {
      output_2[i] = 0;
      for (int j = 0; j < structure[2][0]; j++) {
        output_2[i] += neighbors_array[n][j] * actor_encoder_neighbor_encoder_embedding_mlp_0_weight[j][i];
      }
      output_2[i] += actor_encoder_neighbor_encoder_embedding_mlp_0_bias[i];
      output_2[i] = tanhf(output_2[i]);
    }

    for (int i = 0; i < structure[3][1]; i++) {
      output_3[i] = 0;
      for (int j = 0; j < structure[3][0]; j++) {
        output_3[i] += output_2[j] * actor_encoder_neighbor_encoder_embedding_mlp_2_weight[j][i];
      }

      output_3[i] += actor_encoder_neighbor_encoder_embedding_mlp_2_bias[i];
      output_3[i] = tanhf(output_3[i]);
      neighbor_embeds[i] += output_3[i];
    }
  }

  int self_size = structure[1][1]; // size of self embeddings. Need to offset by this much in the embedding array
  // get mean embeddings
  for (int i = 0; i < structure[3][1]; i++) {
    embedding_array[i+self_size] = neighbor_embeds[i] / NEIGHBORS;
  }
}


std::vector<float> networkEval(std::vector<float> &state_array) {
    py::print("this prints!");
    // first get the self embeddings
    for (int i = 0; i < structure[0][1]; i++) {
      output_0[i] = 0;
      for (int j = 0; j < structure[0][0]; j++) {
        output_0[i] += state_array[j] * actor_encoder_self_encoder_0_weight[j][i]; // add weights
      }
      output_0[i] += actor_encoder_self_encoder_0_bias[i]; // add bias
      output_0[i] = tanhf(output_0[i]); // activation function
    }

    for (int i = 0; i < structure[1][1]; i++) {
      embedding_array[i] = 0;
      for (int j = 0; j < structure[1][0]; j++) {
        embedding_array[i] += output_0[j] * actor_encoder_self_encoder_2_weight[j][i];
      }
      embedding_array[i] += actor_encoder_self_encoder_2_bias[i];
      embedding_array[i] = tanhf(embedding_array[i]);
    }

        // last layer(s)
    for (int i = 0; i < structure[4][1]; i++) {
      output_4[i] = 0;
      for (int j = 0; j < structure[4][0]; j++) {
        output_4[i] += embedding_array[j] * actor_encoder_feed_forward_0_weight[j][i];
      }
      output_4[i] += actor_encoder_feed_forward_0_bias[i];
      output_4[i] = tanhf(output_4[i]);
    }

    for (int i = 0; i < structure[5][1]; i++) {
      output_5[i] = 0;
      for (int j = 0; j < structure[5][0]; j++) {
        output_5[i] += output_4[j] * action_parameterization_distribution_linear_weight[j][i];
      }
      output_5[i] += action_parameterization_distribution_linear_bias[i];
    }

    std::vector<float> control_nn{output_5[0], output_5[1], output_5[2], output_5[3]};

    return control_nn;
}

struct Network{
    Network()
    {
    }

    void neighborEmbeds(const std::vector<std::vector<float>> &neighbors_array){ return neighborEmbedsImpl(neighbors_array); }
    std::vector<float> netEval(std::vector<float> &state_array){return networkEval(state_array);}
};

PYBIND11_MODULE(c_network, m) {
    py::class_<Network>(m, "Network")
        .def(py::init())
        .def("forward", &Network::netEval)
        .def("neighbor_embeds", &Network::neighborEmbeds);
}

//PYBIND11_MODULE(c_network, m) {
//    m.doc() = "pybind11 example plugin"; // optional module docstring
//
//    m.def("netEval", &netEval, "'forward pass of the neural network");
////    m.def("neighborEmbeds", &neighborEmbeds, "Neighbor drone embeddings");
//}

//PYBIND11_MODULE(c_network, m) {
//    m.doc() = "pybind11 example plugin"; // optional module docstring
//
//    m.def("neighborEmbeds", &neighborEmbeds, "A function which adds two numbers");
//}

//int main()
//{
////	std::vector<float> state{0.165928, 0.942265, 0.683338, 0.476424, 0.175134, 0.393026, 0.37596, 0.173734, 0.937535, 0.15913, 0.967515, 0.620271, 0.406, 0.990523, 0.404797, 0.968619, 0.853021, 0.956329};
////	std::vector<float> state{0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0};
//    std::vector<std::vector<float>> states{
//        {0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {0, 0, -1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {0, 0, -2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {-1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {-2, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {0, -2, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//        {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
//	};
//
//
////	std::random_device rnd_device;
////	std::mt19937 rng{ rnd_device() };
////	std::uniform_real_distribution<> dist{0, 1};
////	std::generate(std::begin(state), std::end(state), [&]() {return dist(rng); });
//    for(std::vector<float> state: states) {
//    	std::cout << "State: ";
//        for (auto x : state)
//            std::cout << x << ' ';
////        std::cout << '\n';
//
////        control_t_n motorThrusts;
//        std::vector<float> motorThrusts = netEval(state);
//
//        std::cout << "Controls: ";
//        std::cout << motorThrusts[0] << ' ' << motorThrusts[1] << ' ' << motorThrusts[2] << ' ' << motorThrusts[3] << std::endl;
//    }
////	std::cout << "State:\n";
////	for (auto x : state)
////		std::cout << x << ' ';
////	std::cout << '\n';
////
////	control_t_n motorThrusts;
////	networkEvaluate(&motorThrusts, state.data());
////
////	std::cout << "Controls:\n";
////	std::cout << motorThrusts.thrust_0 << ' ' << motorThrusts.thrust_1 << ' ' << motorThrusts.thrust_2 << ' ' << motorThrusts.thrust_3;
//
//	return EXIT_SUCCESS;
//}